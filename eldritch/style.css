body {
  margin: auto;
  padding: 0px;
  overflow: hidden;
  width: min(100vw, 160vh);
  height: min(62.5vw, 100vh);
  color: black;
}
div {
  display: block;
  margin: 0px;
}
button {
  display: inline-block;
  font-size: calc(min(1.25vw, 2vh));
}
button:disabled {
  background-color: rgba(233, 233, 237); /* TODO: button styling */
}
/* TODO: dedup all of this */
#errorText {
  position: absolute;
  top: 10px;
  left: 50%; /* don't...don't ask */
  margin-right: -50%;
  transform: translateX(-50%);
  text-align: center;
  font-size: 36px;
  color: maroon;
  background: sienna;
  z-index: 40; /* error should be shown over everything else */
}
#giveselect {
  z-index: 20;
  display: none;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: sienna;
  color: black;
  font-size: calc(min(2.5vw, 4vh));
  border: 1px solid black;
  pointer-events: auto;
}
#givetext {
  width: 100%;
}
#givebottom {
  width: 100%;
  display: flex;
  justify-content: space-around;
  align-items: center;
}
#giveslider {
  flex: 0 1 80%;
}
#givevalue {
  flex: 0 0 2ch;
}
#givebuttons {
  width: auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
#charselect, #ancientselect {
  z-index: 20;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: black;
  pointer-events: auto;
}
.bigchoices {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: space-between;
}
#ancientchoice {
  width: min(20vw, 32vh);
  height: min(28.25vw, 45.2vh);
}
#charchoice {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  min-width: min(20vw, 32vh);
  width: min(20vw, 32vh);
  max-width: min(20vw, 32vh);
}
.choicebutton {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: calc(min(1.25vw, 2vh));
  cursor: pointer;
}
.selectbutton {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: space-between;
}
#bottomcenter {
  flex: 0 0 auto;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  font-size: calc(min(2vw, 3.2vh));
  background: #D2A253;
  z-index: 2;
}
#uiprompt {
  width: 100%;
  flex: 0 0 auto;
  text-align: center;
}
#uichoice {
  display: none;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: center;
  color: black;
  font-size: calc(min(2vw, 3.2vh));
  column-gap: 1em;
  row-gap: 0.5em;
}
.cardscroll {
  width: calc(min(72.5vw, 116vh));
  max-width: calc(min(72.5vw, 116vh));
  display: flex;
  justify-content: space-between;
  align-items: center;
  pointer-events: auto;
  z-index: 20;
}
#enteringscroll {
  z-index: 25;
  width: calc(min(80vw, 128vh));
  max-width: calc(min(80vw, 128vh));
  height: 78.6%;
  position: absolute;
  top: 0;
  left: 0;
  justify-content: center;
  align-items: center;
  pointer-events: none;
}
.cardscrollbtn {
  font-size: calc(min(1.25vw, 2vh));
  height: calc(min(15vw, 24vh) * 25 / 16);
  cursor: pointer;
  display: none;
  align-items: center;
  justify-content: center;
  display: none;
}
.overflowing .cardscrollbtn {
  display: flex;
}
.cardscroller {
  width: calc(min(70vw, 112vh));
  max-width: calc(min(70vw, 112vh));
  flex 1 1 auto;
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: flex-start;
  column-gap: calc(min(1.5vw, 2.4vh));
  overflow-x: scroll;
  scroll-behavior: smooth;
  -ms-overflow-style: none;
  scrollbar-width: none;
}
.cardscroller::-webkit-scrollbar {
  display: none;
}
.overflowing .cardscroller {
  justify-content: flex-start;
}
.cardholder {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  backface-visibility: hidden;
  transition: transform 0.8s;
  position: relative;
}
.cardholder.rotated {
  transform: rotateY(-180deg);
}
.cardholder.entering {
  transform: translateY(100%) rotateY(-180deg);
  transition: none;
}
.cardchoice {
  width: calc(min(15vw, 24vh));
  height: calc(min(15vw, 24vh) * 25 / 16);
  position: relative;
}
.monsterchoice {
  width: calc(min(15vw, 24vh));
  height: calc(min(30vw, 48vh));
}
.fightchoice {
  position: relative;
  width: calc(min(15vw, 24vh));
  height: calc(min(15vw, 24vh));
}
.visualback {
  position: absolute;
  top: 0;
  left: 0;
  transform: rotateY(180deg);
  backface-visibility: hidden;
  transition: transform 0.8s;
}
.rotated .visualback {
  transform: none;
}
.entering .visualback {
  transform: none;
  transition: none;
}
.visualchoice {
  position: relative;
  cursor: pointer;
}
.mustspend .visualchoice {
  cursor: grab;
}
.unchoosable .visualchoice {
  filter: grayscale(70%) brightness(70%);
  cursor: not-allowed;
}
.desc {
  width: 100%;
  font-size: calc(min(2vw, 3.2vh));
  text-align: center;
  background: linear-gradient(to right, sienna 50%, #D2A253 50%);
  background-size: 200% 100%;
  background-position: left;
  transition: background-position 0.5s linear;
}
.mustspend .desc {
  background-position: right;
}
.unchoosable .desc {
  background-color: darkgrey;
  background: linear-gradient(to right, darkgrey 50%, darkgrey 50%);
}
.willchoose .desc {
  transition: none;
  background-position: right;
}
.autochoose .desc {
  transition: background-position 6s linear;
  background-position: left;
}
.choice {
  flex: 0 0 auto;
  border: 1px solid black;
  background: linear-gradient(to right, sienna 50%, transparent 50%);
  background-size: 200% 100%;
  background-position: left;
  transition: background-position 0.5s linear;
  padding-left: 0.25em;
  padding-right: 0.25em;
  text-align: center;
}
.choice.choosable {
  cursor: pointer;
}
.choice.choosable:hover {
  background: linear-gradient(to right, saddlebrown 50%, transparent 50%);
  background-size: 200% 100%;
}
.choice.mustspend {
  cursor: grab;
  background-position: right;
}
.choice.unchoosable {
  cursor: not-allowed;
  background: darkgrey;
  background: linear-gradient(to right, darkgrey 50%, darkgrey 50%);
  text-decoration: line-through;
}
#uimonsterchoice {
  display: none;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: sienna;
  color: black;
  border: 1px solid black;
}
#monsterchoices {
  width: 100%;
  height: calc(min(80vw, 128vh) * 3 / 58);
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  cursor: zoom-in;
}
#monsterchoicebuttons button {
  font-size: calc(min(1vw, 1.6vh));
}
#uiuse {
  display: none;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 100%;
}
.spacer {
  flex: 0 1 1em;
  width: 1em;
}
#uispend {
  display: none;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 100%;
}
#uiload {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 25%;
  transform: translate(-50%, -50%);
  z-index: 30;
  color: black;
  background: sienna;
  font-size: 36px;
  text-align: center;
}
#loadbar {
  text-size: 28px;
  position: relative;
}
#loadingbar {
  position: absolute;
  top: 0;
  left: 0;
  width: 0%;
  height: 100%;
  background: chocolate;
  z-index: -1;
}
#errorbar {
  position: absolute;
  top: 0;
  right: 0;
  width: 0%;
  height: 100%;
  background: crimson;
  z-index: -1;
}
#ui {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  position: relative;
  overflow: hidden;
}
#uiright {
  width: 20%;
  max-width: 20%;
  background: cornsilk;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  max-height: min(62.5vw, 100vh);
}
#tabs {
  position: absolute;
  right: 0;
  bottom: 0;
  height: 5%;
  width: calc(min(20vw, 32vh));
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: center;
  font-size: calc(min(2vw, 3.2vh));
  background: wheat;
}
.righttab {
  height: 100%;
  flex: 1 1 auto;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}
.righttab:hover {
  background: cornsilk;
}
.righttab.shown {
  background: cornsilk;
}
.rightelem {
  position: absolute;
  right: 0;
  top: 0;
  min-height: 0;
  height: 95%;
  width: calc(min(20vw, 32vh));
  transition: transform 0.5s;
}
.rightelem.shown {
  transform: none;
}
.rightelem.notshown {
  transform: translate(101%, 0);
}
#uichars {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
}
#uichars.notshown {
  transform: translate(-101%, 0);
}
#charoverlay {
  position: absolute;
  top: 0;
  right: 0;
  width: calc(min(20vw, 32vh));
  height: 0;
  pointer-events: none;
  z-index: 3;
}
#charoverlay.shown {
  height: 100%;
  opacity: 0.6;
  background-color: gray;
}
#eventlog {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  overflow-y: scroll;
}
#admin {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  row-gap: calc(min(1vw, 1.6vh));
  font-size: calc(min(1vw, 1.6vh));
}
#admin button {
  font-size: calc(min(1vw, 1.6vh));
}
.admincategory {
  border-top: 1px solid black;
  width: 100%;
}
.logevent {
  white-space: pre;
  margin-top: 0.2em;
  margin-bottom: 0.2em;
  margin-left: 0.5em;
  margin-right: 0.5em;
}
.logevent::before {
  content: "➖ ";
}
.collapsed .logevent {
  display: none;
}
.collapsed.logevent::before {
  content: "➕ ";
}
#uimain {
  width: 80%;
  max-width: 80%;
  height: 100%;
  max-height: min(62.5vw, 100vh);
  background: #D2A253;
  display: flex;
  flex-direction: column;
}
#centerizer {
  z-index: 20;
  width: min(70vw, 112vh);
  height: min(48vw, 76.8vh);
  position: absolute;
  top: min(2.5vw, 4vh);
  right: min(20vw, 32vh);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  row-gap: calc(min(5vw, 8vh));
  pointer-events: none;
}
#selectors {
  z-index: 20;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-evenly;
}
#uicont {
  flex: 1 1 auto;
  display: inline-block;
  width: 100%;
  height: 100%;
  z-index: 1;
  background: #D2A253;
  overflow: hidden;
}
#uileft {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 10%;
  max-width: 10%;
  height: calc(min(60.25vw, 96.4vh));
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-end;
  z-index: 2;
}
#board {
  display: inline flex;
  width: 58.6%;
  max-width: 58.6%;
  height: 132.78%;
  min-height: 132.78%;
  max-height: 132.78%;
  position: relative;
}
#boardright {
  position: absolute;
  right: 20%;
  top: 0;
  width: 0;
  height: 100%;
  min-height: 100%;
  max-height: 100%;
  z-index: 2;
  display: inline flex;
  flex-direction: column;
  align-items: flex-end;
  justify-content: flex-end;
}
#uibottom{
  position: absolute;
  bottom: 0;
  left: 15%;
  width: calc(min(60vw, 96vh));
  min-height: calc(min(12vw, 19.2vh));
  height: calc(min(12vw, 19.2vh));
  max-height: calc(min(12vw, 19.2vh));
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}
#worlds {
  min-height: calc(min(62.5vw, 100vh) * 9 / 250);
  height: calc(min(62.5vw, 100vh) * 9 / 250);
  max-height: calc(min(62.5vw, 100vh) * 9 / 250);
  width: min(80vw, 128vh);
  display: flex;
  flex-direction: row;
  z-index: 2;
}
.world {
  position: relative;
  overflow: hidden;
  transition: all 0.5s;
  height: calc(min(62.5vw, 100vh) * 9 / 250);
  width: min(10vw, 16vh);
}
.world:hover {
  height: calc(min(62.5vw, 100vh) * 4 / 25);
  transition-delay: 0.15s;
  color: black;
}
.world.shown {
  height: calc(min(62.5vw, 100vh) * 4 / 25);
  color: white;
}
.worldbox {
  position: absolute;
  top: 0;
  left: 0;
  width: min(10vw, 16vh);
  height: min(10vw, 16vh);
}
.portrait {
  width: calc(min(62.5vw, 100vh) * 9 / 250);
  height: calc(min(62.5vw, 100vh) * 9 / 250);
  border-radius: 50%;
  overflow: hidden;
  z-index: 5;
  position: relative;
  transition: opacity 0.5s;
}
.world:hover .portrait {
  opacity: 0;
  transition-delay: 0.15s;
}
.world.shown .portrait {
  opacity: 0;
}
.portraitleft {
  position: absolute;
  top: 0;
  left: 0;
  height: 22.5%;
  width: 50%;
  display: flex;
  align-items: center;
  justify-content: flex-start;
}
.portraitright {
  position: absolute;
  top: 0;
  right: 0;
  height: 22.5%;
  width: 50%;
  display: flex;
  align-items: center;
  justify-content: flex-end;
}
.worldchars {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
}
.worldleft {
  position: absolute;
  width: 50%;
  height: 75%;
  bottom: 0;
  left: 0;
}
.worldright {
  position: absolute;
  width: 50%;
  height: 75%;
  bottom: 0;
  right: 0;
}
.worldcnvcontainer {
  position: absolute;
  top: 0;
  left: 0;
  width: min(10vw, 16vh);
  height: min(10vw, 16vh);
}
.worldcnv {
  position: absolute;
  top: 0;
  left: 0;
}
#globals {
  flex: 1 1 auto;
  width: 100%;
  min-height: 0;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  cursor: zoom-in;
}
#globals.zoomed {
  cursor: zoom-out;
}
.mythoscontainer {
  position: relative;
  flex: 0 1 auto;
  width: 87.5%;
  min-height: 0;
  height: calc(min(8.75vw, 14vh) * 2);
}
.mythoscontainer.missing {
  height: 0;
}
.mythoscard {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(min(8.75vw, 14vh));
  height: calc(min(8.75vw, 14vh) * 3 / 2);
}
.mythoscnv {
  position: absolute;
  top: 0;
  left: 0;
}
.bigmythoscard {
  position: relative;
  width: calc(min(15vw, 24vh));
  height: calc(min(15vw, 24vh) * 3 / 2);
}
.unchoosable .bigmythoscard {
  filter: grayscale(70%) brightness(70%);
}
#ancientone {
  flex: 0 0 auto;
  min-width: calc(min(15vw, 24vh));
  width: calc(min(15vw, 24vh));
  min-height: calc(min(12vw, 19.2vh));
  height: calc(min(12vw, 19.2vh));
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  z-index: 3;
}
#slumber {
  min-width: calc(min(8vw, 12.8vh));
  width: calc(min(8vw, 12.8vh));
  max-width: calc(min(8vw, 12.8vh));
  min-height: calc(min(12vw, 19.2vh));
  height: calc(min(12vw, 19.2vh));
  max-height: calc(min(12vw, 19.2vh));
}
#ancienttracks {
  min-width: calc(min(7vw, 11.2vh));
  width: calc(min(7vw, 11.2vh));
  max-width: calc(min(7vw, 11.2vh));
  min-height: calc(min(12vw, 19.2vh));
  height: calc(min(12vw, 19.2vh));
  max-height: calc(min(12vw, 19.2vh));
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  justify-content: space-between;
}
#worshippers {
  min-width: calc(min(7vw, 11.2vh));
  width: calc(min(7vw, 11.2vh));
  max-width: calc(min(7vw, 11.2vh));
  min-height: calc(min(9vw, 14.4vh));
  height: calc(min(9vw, 14.4vh));
  max-height: calc(min(9vw, 14.4vh));
}
#tracks {
  min-width: calc(min(7vw, 11.2vh));
  width: calc(min(7vw, 11.2vh));
  max-width: calc(min(7vw, 11.2vh));
  min-height: calc(min(3vw, 4.8vh));
  height: calc(min(3vw, 4.8vh));
  max-height: calc(min(3vw, 4.8vh));
  display: flex;
  flex-direction: row;
  align-items: flex-end;
  justify-content: flex-end;
}
.track {
  min-height: calc(min(3vw, 4.8vh));
  height: calc(min(3vw, 4.8vh));
  max-height: calc(min(3vw, 4.8vh));
  min-width: calc(min(3vw, 4.8vh));
  width: calc(min(3vw, 4.8vh));
  max-width: calc(min(3vw, 4.8vh));
}
#extra {
  width: calc(min(5vw, 8vh));
  height: calc(min(20vw, 32vh));
  max-height: calc(min(20vw, 32vh));
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  justify-content: flex-end;
}
#extrabuttons {
  font-size: calc(min(3vw, 4.8vh));
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-end;
}
#togglecards {
  cursor: pointer;
}
#togglecards.hide {
  filter: sepia(25%) hue-rotate(15deg);
}
#togglecards.hidden {
  display: none;
}
#flip {
  transform: rotate(-90deg);
  cursor: pointer;
}
.misc {
  min-width: calc(min(5vw, 8vh));
  width: calc(min(5vw, 8vh));
  max-width: calc(min(5vw, 8vh));
  min-height: calc(min(5vw, 8vh));
  height: calc(min(5vw, 8vh));
  max-height: calc(min(5vw, 8vh));
  position: relative;
}
.placemiscbox {
  width: 100%;
  height: 100%;
}
.misccnv {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none;
}
.monster {
  flex: 0 1 calc(min(80vw, 128vh) * 3 / 58);
  z-index: 10; /* TODO */
  position: relative;
  min-width: 0;
  width: calc(min(80vw, 128vh) * 3 / 58);
  height: calc(min(80vw, 128vh) * 3 / 58);
  overflow: hidden;
}
.monster:last-child {
  flex: 0 0 calc(min(80vw, 128vh) * 3 / 58);
}
.bigmonster {
  z-index: 10; /* TODO */
  position: relative;
  min-width: 0;
  width: calc(min(10vw, 16vh));
  height: calc(min(10vw, 16vh));
  overflow: hidden;
}
#monsterdetailsbox.choosable .bigmonster {
  cursor: pointer;
  pointer-events: auto;
}
.monstercontainer {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(min(80vw, 128vh) * 3 / 58);
  height: calc(min(80vw, 128vh) * 3 / 58);
}
.bigmonstercontainer {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(min(10vw, 16vh));
  height: calc(min(10vw, 16vh));
}
.monstercnv {
  position: absolute;
  top: 0;
  left: 0;
}
.marker {
  z-index: 12; /* TODO */
  position: relative;
  width: calc(min(80vw, 128vh) / 29);
  height: calc(min(80vw, 128vh) * 3 / 58);
  order: 2;
}
.markercontainer {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(min(80vw, 128vh) / 29);
  height: calc(min(80vw, 128vh) * 3 / 58);
}
.markercontainer.delayed {
  transform: rotate(90deg);
  transform-origin: center;
}
.markercnv {
  position: absolute;
  top: 0;
  left: 0;
}
.moving {
  transition: transform 0.5s;
  z-index: 5;
}
.place {
  position: absolute;
  background-color: rgba(0, 255, 0, 0);
  color: rgba(0, 0, 0, 0);
  transform: translateX(-50%) translateY(-50%);
  display: flex;
  align-items: center;
  justify-content: center;
  width: calc(min(80vw, 128vh) * 2 / 29);
  height: calc(min(80vw, 128vh) * 2 / 29);
}
.placehover {
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  display: flex;
  align-items: center;
  justify-content: center;
}
.placebox {
  position: absolute;
  max-width: 100%;
  max-height: 100%;
  min-width: 100%;
  min-height: 100%;
  transition: all 0.5s;
  display: block;
}
.placebox:hover {
  max-width: none;
  max-height: 175%;
  min-height: 100%;
  min-width: 100%;
  display: flex;
  flex-direction: column;
}
.withgate.placebox:hover {
  min-width: 200%;
}
.withdetails.placebox:hover {
  min-width: 200%;
}
.withdetails.withgate.placebox:hover {
  min-width: 300%;
}
.withmonsters.placebox:hover {
  min-height: 175%;
}
.placeupper {
  top: 0;
}
.placelower {
  bottom: 0;
}
.placeleft {
  left: 0;
}
.placeright {
  right: 0;
}
.placemonsters {
  flex: 1 1 auto;
  height: calc(min(80vw, 128vh) * 2 / 29);
  max-width: 100%;
  max-height: 100%;
  min-height: 0;
  position: absolute;
  display: flex;
  flex-direction: row;
  justify-content: center;
  cursor: zoom-in;
  transition: all 0.5s;
}
.placelower .placemonsters {
  top: 0;
  order: 1;
  align-items: flex-start;
}
.placeupper .placemonsters {
  bottom: 0;
  order: 5;
  align-items: flex-end;
}
.placeleft .placemonsters {
  align-self: flex-start;
  left: 0;
}
.placeright .placemonsters {
  align-self: flex-end;
  right: 0;
}
.withmonsters.placebox:hover .placemonsters {
  position: relative;
  max-width: 200%;
}
.placedetails {
  flex: 1 0 auto;
  order: 3;
  position: absolute;
  max-width: 100%;
  height: calc(min(80vw, 128vh) * 2 / 29);
  display: flex;
  transition: all 0.5s;
  justify-content: flex-end;
}
.placelower .placedetails {
  bottom: 0;
}
.placeupper .placedetails {
  top: 0;
}
.placeleft .placedetails {
  left: 0;
  flex-direction: row-reverse;
  align-self: flex-start;
}
.placeright .placedetails {
  right: 0;
  flex-direction: row;
  align-self: flex-end;
}
.placebox:hover .placedetails {
  position: relative;
  max-width: none;
}
.placechars {
  flex: 1 1 auto;
  order: 1;
  display: flex;
  height: calc(min(80vw, 128vh) * 2 / 29);
}
.placeleft .placechars {
  flex-direction: row;
}
.placeright .placechars {
  flex-direction: row-reverse;
}
.placeupper .placechars {
  align-items: flex-start;
}
.placelower .placechars {
  align-items: flex-end;
}
.placegate {
  flex: 1 1 auto;
  max-width: 0;
  position: relative;
  top: 0;
  order: 3;
  transition: all 0.5s;
  height: calc(min(80vw, 128vh) * 2 / 29);
  width: calc(min(80vw, 128vh) * 2 / 29);
}
.gatecontainer {
  position: absolute;
  top: 0;
  height: calc(min(80vw, 128vh) * 2 / 29);
  width: calc(min(80vw, 128vh) * 2 / 29);
  transition: transform 0.8s;
}
.placeleft .placegate {
  left: 0;
}
.placeright .placegate {
  right: 0;
}
.placeleft .gatecontainer {
  left: 0;
}
.placeright .gatecontainer {
  right: 0;
}
.placebox:hover .placegatepresent {
  position: relative;
  max-width: 100%;
}
.placeselect {
  flex: 1 1 auto;
  order: 5;
  max-width: 0;
  position: relative;
  transition: all 0.5s;
  height: calc(min(80vw, 128vh) * 2 / 29);
  width: calc(min(80vw, 128vh) * 2 / 29);
}
.placeinnerselect {
  height: calc(min(80vw, 128vh) * 2 / 29);
  width: calc(min(80vw, 128vh) * 2 / 29);
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: calc(min(1vw, 1.6vh));
  transition: all 0.2s;
}
.placeleft .placeinnerselect {
  left: 0;
}
.placeright .placeinnerselect {
  right: 0;
}
.placeupper .placeinnerselect {
  top: 0;
}
.placelower .placeinnerselect {
  bottom: 0;
}
.placebox:hover .placeselect {
  max-width: 100%;
}
.location {
  border-radius: 50%;
}
.unselectable:hover {
  color: rgba(0, 0, 0, 1);
}
.hoverable:hover {
  background-color: rgba(255, 255, 255, 0.7);
  color: rgba(0, 0, 0, 1);
}
.selectable:hover {
  background-color: rgba(0, 255, 0, 0.7);
  color: rgba(0, 0, 0, 1);
  cursor: pointer;
}
.gate {
  position: absolute;
  top: 0;
  right: 0;
  pointer-events: none;
  z-index: 5;
}
.placeleft .gate {
  left: 0;
}
.closed {
  align-self: center;
  position: relative;
  height: calc(min(80vw, 128vh) / 20);
  width: calc(min(80vw, 128vh) / 32);
  order: 2;
}
.clue, .seal {
  align-self: center;
  position: relative;
  width: calc(min(80vw, 128vh) * 3 / 118);
  height: calc(min(80vw, 128vh) * 3 / 118);
}
.clue.moving {
  transition: transform 0.8s;
}
.clue.entering {
  transform: translateY(400%);
  transition: none;
}
.clue.hidden {
  visibility: hidden;
}
.activity {
  align-self: center;
  position: relative;
  width: calc(min(80vw, 128vh) * 3 / 118);
  height: calc(min(80vw, 128vh) * 11 / 500);
  cursor: zoom-in;
}
.clue {
  order: 3;
}
.seal, .activity {
  order: 1;
}
.closedcontainer {
  position: absolute;
  top: 0;
  left: 0;
  height: calc(min(80vw, 128vh) / 20);
  width: calc(min(80vw, 128vh) / 32);
  z-index: 11;
}
.cluecontainer {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(min(80vw, 128vh) * 3 / 118);
  height: calc(min(80vw, 128vh) * 3 / 118);
  z-index: 11;
}
.cluecnv {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 11;
}
.actcontainer {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(min(80vw, 128vh) * 3 / 118);
  height: calc(min(80vw, 128vh) * 11 / 500);
  z-index: 11;
}
#uidice {
  display: none;
  flex-direction: column;
  justify-content: flex-start:
  align-items: center;
}
#dice {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
}
.die {
  width: 1.25em;
  height: 1.25em;
  text-align: center;
  background: sienna;
  border: 1px solid black;
}
.success {
  background: green;
}
.choice.success:hover {
  background: darkgreen;
}
.fail {
  background: firebrick;
}
.choice.fail:hover {
  background: darkred;
}
#roll {
  font-size: calc(min(1.25vw, 2vh));
}
.buttonholder {
  display: flex;
  align-items: center;
  justify-content: center;
}
#monsterdetails {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 9;
  display: none;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: sienna;
  color: black;
  font-size: calc(min(2.5vw, 4vh));
  border: 1px solid black;
  pointer-events: auto;
}
#monsterdetailsname {
}
#monsterdetailsbox {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  pointer-events: none;
}
#hidemonsters {
}
.player {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  background: cornsilk;
  border-bottom: 1px solid black;
}
.player.nochoose {
  filter: grayscale(70%);
}
.playertop {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
}
.picture {
  position: relative;
  width: calc(min(20vw, 32vh) * 2 / 7);
  height: calc(min(20vw, 32vh) * 2 / 7);
}
.playername {
  position: relative;
  width: calc(min(20vw, 32vh) * 3 / 7);
  height: calc(min(20vw, 32vh) * 2 / 7);
}
.playerstats {
  position: relative;
  width: calc(min(20vw, 32vh) * 2 / 7);
  height: calc(min(20vw, 32vh) * 2 / 7);
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
}
.statsbg {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(min(20vw, 32vh) * 2 / 7);
  height: calc(min(20vw, 32vh) * 2 / 7);
}
.stats {
  position: relative;
  width: calc(min(20vw, 32vh) / 8);
  height: calc(min(20vw, 32vh) / 8);
  z-index: 1;
}
.stats.spendable {
  cursor: pointer;
  z-index: 4;
}
.abs {
  position: absolute;
  top: 0;
  left: 0;
}
.stamina {
  order: 1;
}
.sanity {
  order: 2;
}
.clues {
  order: 3;
}
.dollars {
  order: 4;
}
.focushome {
  width: calc(min(20vw, 32vh));
  height: calc(min(20vw, 32vh) / 16);
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.collapsed .focushome {
  max-height: 0;
  overflow-y: hidden;
}
.focus, .home {
  width: calc(min(10vw, 16vh));
  height: calc(min(20vw, 32vh) / 16);
  position: relative;
}
.slidercont {
  width: calc(min(20vw, 32vh));
}
.collapsed .slidercont {
  max-height: 0;
  overflow-y: hidden;
}
#sliderbuttons {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-evenly;
  position: relative;
  z-index: 4;
}
#sliderbuttons.hidden {
  display: none;
}
.sliders {
  width: calc(min(20vw, 32vh));
  height: calc(min(20vw, 32vh) * 7 / 16);
  position: relative;
}
.sliders.usable {
  z-index: 4;
}
.slider {
  position: absolute;
  transform: translateX(-50%) translateY(50%);
  width: calc(min(2.375vw, 3.8vh));
  height: calc(min(3.3vw, 5.28vh));
  opacity: 0;
}
.you .slider:hover {
  opacity: 0.5;
}
.slider.orig {
  opacity: 0.4;
}
.slider.pending {
  opacity: 0.9;
}
.slider.chosen {
  opacity: 1;
}
.you .slider {
  cursor: pointer;
}
.bag {
  width: 100%;
  display: flex;
  flex-direction: column;
}
.bagtabs {
  width: 100%;
  display: flex;
  flex-direction: row;
  background-color: wheat;
  justify-content: space-evenly;
}
.bagtabs.hidden {
  max-height: 0;
  overflow-y: hidden;
}
.collapsed .bagtabs {
  max-height: 0;
  overflow-y: hidden;
}
.bagtab {
  width: 45%;
  font-size: calc(min(1vw, 1.6vh));
  text-align: center;
  cursor: pointer;
  background-color: cornsilk;
  border-radius: 0.5em 0.5em 0 0;
}
.bagtab.inactive {
  background-color: wheat;
}
.bagtab.inactive.usable {
  z-index: 4;
}
.possessions {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: flex-start;
  align-content: flex-start;
  row-gap: calc(min(0.5vw, 0.8vh));
  margin-top: calc(min(0.5vw, 0.8vh));
  margin-bottom: calc(min(0.5vw, 0.8vh));
}
.collapsed .possessions {
  max-height: 0;
  margin-top: 0;
  margin-bottom: 0;
  overflow-y: hidden;
}
.possessions.hidden {
  max-height: 0;
  margin-top: 0;
  margin-bottom: 0;
  overflow-y: hidden;
}
.possession {
  position: relative;
  width: calc(min(4.5vw, 7.2vh));
  height: calc(min(4.5vw, 7.2vh) * 25 / 16);
  transition: all 0.3s;
  transform-origin: center;
  z-index: 1;
}
.possession:hover {
  transform: scale(2.5);
  transition-delay: 0.5s;
}
.possession.big {
  width: calc(min(9.5vw, 15.2vh));
}
.possession.big:hover {
  transform: scale(2);
}
.poscnv {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.4);
  transition: transform 0.3s;
}
.possession.big .poscnv {
  transform: translate(-50%, -50%) scale(0.5);
}
.exhausted .poscnv {
  transform: translate(-50%, -50%) scale(0.4) rotate(180deg);
}
.possession.big.exhausted .poscnv {
  transform: translate(-50%, -50%) scale(0.5) rotate(180deg);
}
.possession:hover .poscnv {
  transform: translate(-50%, -50%) scale(0.4);
  transition-delay: 0.5s;
}
.possession.big:hover .poscnv {
  transform: translate(-50%, -50%) scale(0.5);
}
.possession.usable {
  cursor: pointer;
  z-index: 4;
}
.possession.choosable {
  cursor: pointer;
  z-index: 4;
}
.bonus, .chosencheck {
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  pointer-events: none;
  color: rgba(0, 0, 0, 0);
  font-size: calc(min(1.5vw, 2.4vh));
  font-weight: bold;
}
.chosencheck.check {
  filter: sepia(90%) hue-rotate(90deg) brightness(130%);
}
.possession.active .chosencheck {
  color: black;
}
.possession.chosen .chosencheck {
  color: black;
}
.spent .chosencheck {
  color: black;
}
.tokens {
  position: absolute;
  top: 0;
  left: 0;
  height: 50%;
  width: 100%;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: center;
  pointer-events: none;
}
.token {
  position: relative;
  width: calc(min(2vw, 3.2vh));
  height: calc(min(2vw, 3.2vh));
}
.trophy {
  position: relative;
  width: calc(min(4.5vw, 7.2vh));
  height: calc(min(4.5vw, 7.2vh));
  transition: all 0.3s;
  transform-origin: center;
}
.trophy:hover {
  transform: scale(2.5);
  transition-delay: 0.5s;
}
.trophy.usable {
  cursor: pointer;
  z-index: 4;
}
#usebuttons {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-evenly;
  position: relative;
  z-index: 4;
}
.collapsed #usebuttons {
  display: none;
}
.bonus.shown {
  color: rgba(0, 0, 0, 1);
  background: rgba(255, 255, 255, 0.7);
}
