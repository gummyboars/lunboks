# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Down scope as necessary via https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
permissions:
  checks: write
  contents: write

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Format check with Ruff
      if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
      run: |
        ruff format --diff .
    - name: Auto-format code with Ruff
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
      run: |
        ruff format .
    - name: Check for changes
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
      id: git-check
      run: echo "modified=$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT
    - name: Push Changes
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && steps.git-check.outputs.modified == 'true'
      run: |
        git config --global user.name 'Lint Action'
        git config --global user.email 'lint-action@samuelmeuli.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git commit -am "Auto-format with Ruff"
        git push
  ruff-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Lint code with Ruff
      run: |
        ruff check --output-format=github .
  lint-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Analyze the code with pylint
      run: |
        pylint -j 0 **/*.py
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python -m unittest
